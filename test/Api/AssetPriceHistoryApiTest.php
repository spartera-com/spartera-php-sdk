<?php
/**
 * AssetPriceHistoryApiTest
 * PHP version 8.1
 *
 * @category Class
 * @package  SparteraApiSdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Spartera API Documentation
 *
 * Auto-generated API documentation for REST services of the Spartera platform
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: support@spartera.com
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.13.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace SparteraApiSdk\Test\Api;

use \SparteraApiSdk\Configuration;
use \SparteraApiSdk\ApiException;
use \SparteraApiSdk\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * AssetPriceHistoryApiTest Class Doc Comment
 *
 * @category Class
 * @package  SparteraApiSdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class AssetPriceHistoryApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for companiesCompanyIdAssetsAssetIdPricesActiveGet
     *
     * Get the currently active price for an asset.
     *
     */
    public function testCompaniesCompanyIdAssetsAssetIdPricesActiveGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for companiesCompanyIdAssetsAssetIdPricesAphIdDelete
     *
     * Delete single price history record by ID.
     *
     */
    public function testCompaniesCompanyIdAssetsAssetIdPricesAphIdDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for companiesCompanyIdAssetsAssetIdPricesAphIdGet
     *
     * Get single price history record by ID.
     *
     */
    public function testCompaniesCompanyIdAssetsAssetIdPricesAphIdGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for companiesCompanyIdAssetsAssetIdPricesAphIdPatch
     *
     * Update an existing price history record by ID.
     *
     */
    public function testCompaniesCompanyIdAssetsAssetIdPricesAphIdPatch()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for companiesCompanyIdAssetsAssetIdPricesCalculateCreditsPost
     *
     * Calculate the credit equivalent for a given USD price without saving.
     *
     */
    public function testCompaniesCompanyIdAssetsAssetIdPricesCalculateCreditsPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for companiesCompanyIdAssetsAssetIdPricesDiscountPost
     *
     * Apply a discount to the active price for an asset.
     *
     */
    public function testCompaniesCompanyIdAssetsAssetIdPricesDiscountPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for companiesCompanyIdAssetsAssetIdPricesGet
     *
     * Get all price history records for a specific asset.
     *
     */
    public function testCompaniesCompanyIdAssetsAssetIdPricesGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for companiesCompanyIdAssetsAssetIdPricesPost
     *
     * Create a new price history record for an asset.
     *
     */
    public function testCompaniesCompanyIdAssetsAssetIdPricesPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
